#!/usr/bin/env node


/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('pensees2confines:server');
var http = require('http').createServer(app);
var io = require('socket.io')(http);
const messageModel = require("../models/Message");

io.on('connection', function(socket){
  console.log('a user connected');
  socket.on('disconnect', function(){
    console.log('user disconnected');
  });
  socket.on('chat message', function(msg){
    messageModel.create({text : msg})
    .then(dbRes => io.emit('chat message', dbRes))
    .catch(dbErr => console.log(dbErr))
  });
  socket.on('post answer', function(msg_id, text){
    messageModel.findByIdAndUpdate(msg_id, {$push : { response : text}}, {new : true})
    .then(dbRes => io.emit('post answer', text, msg_id ))
    .catch(dbErr => console.log(dbErr))
  });
  socket.on('ontype', function(){
  socket.broadcast.emit('ontype')
  });
  socket.on('stop ontype', function(){
  socket.broadcast.emit('stop ontype')
  });
});

http.listen(3000, function(){
  console.log('listening on *:3000');
});
